<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="testString"><![CDATA[
    B<sub><small>x</small></sub>->B<sub><small>10</small></sub>
    ]]></string>

    <string name="app_name">NerdyNumeralChallenge</string>
    <string name="continue_button_text">-></string>
    <string name="back_button_text">&lt;-</string>
    <string name="tutorial_solution_button">Lösen</string>


    //TutorialMain
    <string name="tutorial_intro_button">Einführung</string>
    <string name="tutorial_from_10_button"><![CDATA[
    B<sub><small>x</small></sub> > B<sub><small>10</small></sub>
    ]]></string>
    <string name="tutorial_from_other_button"><![CDATA[B<sub><small>10</small></sub> > B<sub><small>x</small></sub>]]> </string>
    <string name="tutorial_tricks_button">Nerdy Tricks</string>

    //StartScreen
    <string name="start_tutorial_button">Tutorial</string>
    <string name="start_practice_button">Übungsaufgaben</string>
    <string name="start_game_button">Spielmodus</string>
    <string name="start_progress_button">Fortschritt</string>

    //Settings
    <string name="settings_sound_textView">Sounds</string>
    <string name="settings_soundEffects">Soundeffekte</string>
    <string name="settings_music">Hintergrundmusik</string>
    <string name="settings_pushNotifications">Push-Benachrichtigungen</string>
    <string name="settings_push_activated">aktivieren</string>

    //gameMain
    <string name="game_start">Start!</string>
    <string name="game_highscore">Highscore</string>
    <string name="game_help">Help</string>
    <string name="game_weather">Wie ist das Wetter?</string>
    
    //help
    <string name="game_help_explanation">
        Dem Nerd stellen sich allerlei Hindernisse in den Weg.Gruben müssen übersprungen und weiblichen Wesen muss ausgewichen werden,gleichzeitig gilt es Umrechnungsaufgaben zu lösen.\n\n
Oben links ist der derzeitige Punktestand zu sehen. Oben rechts wird angezeigt, wie viele Leben der Nerd noch hat. \n
Wenn oben eine Zahl im Binär oder Hex-System erscheint, muss eine Aufgabe gelöst werden.Lösungen im Dezimalsystem erscheinen und der Nerd muss die richtige Lösung durch Springen einsammeln. \n
Um zu Springen, tippe auf den Bildschirm.\n
Wenn der Nerd in Gruben fällt, verliert er ein Leben. Beim Zusammenstoß mit weiblichen Wesen kann er eine Aufgabe lösen, um einem Gespräch auszuweichen, falls er sie nicht innerhalb einer vorgegebenen Zeit löst, verliert er auch ein Leben.\n
Mit Verlieren des letzten Lebens endet das Spiel.\n\n
Los geht’s!\n
</string>

    //Questions

    <string name="wrong_answer_toast_text">Diese Antwort ist leider falsch. Gehen Sie das Tutorial noch einmal genau durch. \n
    Die richtige Antwort wäre:</string>

    <string-array name="numeral_systems">
        <item>Binärsystem</item>
        <item>Trialsystem</item>
        <item>Quaternalsystem</item>
        <item>Pentalsystem</item>
        <item>Hexalsystem</item>
        <item>Heptalsystem</item>
        <item>Oktalsystem</item>
        <item>Nonalsystem</item>
        <item>Dezimalsystem</item>
        <item>Undezimalsystem</item>
        <item>Duodezimalsystem</item>
        <item>Tridezimalsystem</item>
        <item>Quatridezimalsystem</item>
        <item>Pentadezimalsystem</item>
        <item>Hexadezimalsystem</item>
    </string-array>


    //Freetext: part1+numeral_systems[x]+part2
    <string name="free_text_question_1">Rechnen Sie die im </string>
    <string name="free_text_question_2"> gegebene Zahl in das </string>
    <string name="free_text_question_3"> um.\n</string>
    <string name="answer_prompt">Antwort eingeben!</string>


    //MultipleChoice: part1 + numeral_systems[x]+part2
    <string name="multiple_choice_question_1">Wählen Sie für die gegebene Zahl die richtige Entsprechung im </string>
    <string name="multiple_choice_question_2"> aus.\n</string>

    //True/False:
    <string name="true_false_question_1">Ist der folgende Ausdruck wahr oder falsch?\n</string>
    <string name="true_button_tag">wahr</string>
    <string name="false_button_tag">falsch</string>

    //Explanations
    
    <string-array name="tutorial_intro" >
        <item>
            <![CDATA[
            Die Zahlensysteme, um die es hier geht, sind Stellenwertsysteme, d.h. es gibt eine bestimmte Anzahl an Ziffern in einem Zahlensystem.
            Abhängig davon an welcher Stelle in einer Zahl diese stehen, haben sie einen unterschiedlichen Wert.
            Je weiter links eine Ziffer steht, desto höher ist dieser Wert.
            Das im Alltag am meisten verwendete Zahlensystem ist das Dezimalsystem, das auf der Basis 10 basiert.<br/>
            Man kann bei der Zahl 387 von der Einerstelle, der Zehnerstelle und der Hunderterstelle sprechen.<br/><br/>
            Die 7 an der Einerstelle hat einen Wert von 7*1 = 7<br/>
            Die 8 an der Zehnerstelle hat einen Wert von 8*10 = 80<br/>
            Die 3 an der Hunderterstelle hat einen Wert von 3*100 = 300<br/>
            Um den Wert der ganzen Zahl zu bekommen muss man die Werte der einzelnen Stellen addieren:<br/>
            7+80+300 = 387
            ]]>
        </item>
        <item><![CDATA[

            In der Informatik gibt es noch weitere Zahlensysteme, die auf das Binärsystem, dem Zahlensystem zur Basis 2, zurückgehen.
            Das hat den Grund, dass ein Computer auf der Hardware-Ebene nur zwei Zustände kennt: An/Aus, Geladen/Ungeladen…<br/>
            Im Binärsystem gibt es daher auch nur zwei Ziffern: 0 und 1. Auch das Binärsystem und alle weiteren hier behandelten Zahlensysteme
            sind stellenwertbasierte Systeme, d.h. je weiter links eine Ziffer in einer Zahl steht, desto höher ist ihr Wert.

        ]]></item>
        <item>
        <![CDATA[
            Weitere in der Informatik relevante Zahlensysteme sind das Oktalsystem (zur Basis 8) und das Hexadezimalsystem (zur Basis 16).
            Diese beiden sind leicht in das Binärsystem umzuwandeln und haben analog zum Binärsystem, das 2 verschiedene Ziffern hat,
            8 bzw. 16 unterschiedliche Ziffern.
            ]]>
        </item>
        <item>
        <![CDATA[
            Für Zahlensysteme mit einer höheren Basis als 10 gibt es allerdings keine arabischen Ziffern mehr.
            Deswegen verwendet man dann die Buchstaben des lateinischen Alphabets, angefangen bei A.
            Das Hexadezimalsystem hat somit die Ziffern 0-9 und A-F.
            ]]>
        </item>
        <item>
        <![CDATA[
            Für die verschiedenen Systeme gibt es auch Namen, die oft aus dem Lateinischen oder Griechischen abeleitet sind:<br/><br/>
            Binärsystem<br/>
            Trialsystem<br/>
            Quaternalsystem<br/>
            Pentalsystem<br/>
            Hexalsystem<br/>
            Heptalsystem<br/>
            Oktalsystem<br/>
            Nonalsystem<br/>
            Dezimalsystem<br/>
            Undezimalsystem<br/>
            Duodezimalsystem<br/>
            Tridezimalsystem<br/>
            Quatridezimalsystem<br/>
            Pentadezimalsystem<br/>
            Hexadezimalsystem<br/>
            ]]>
        </item>
        <item>
            Der Anfang ist gemacht. Im nächsten Tutorial geht es um die Umrechnung einer Zahl aus einem beliebigen Zahlensystem ins Dezimalsystem.
        </item>
    </string-array>

    <string-array name="tutorial_decimal">
        <item><![CDATA[
        Bei der Betrachtung einer Dezimalzahl fällt auf, dass nach links jede Stelle 10 mal mehr wert ist als die letzte.
            Die Zehnerstelle ist 10 * 1 wert. Die Hunderterstelle ist 10*10 wert usw.<br/>
            Man kann verallgemeinern:<br/>
            Einerstelle entspricht 10<sup><small>0</small></sup>-Stelle<br/>
            Zehnerstelle entspricht 10<sup><small>1</small></sup>-Stelle<br/>
            Hunderterstelle entspricht 10<sup><small>2</small></sup>-Stelle  …<br/>

            In anderen Zahlensystemen funktioniert dieses System genauso, nur mit einer anderen Basis natürlich.<br/>
            Beispiel im Binärsystem:<br/>
            __   __   __   __<br/>
            2<sup><small>3</small></sup>   2<sup><small>2</small></sup>  2<sup><small>1</small></sup>  2<sup><small>0</small></sup><br/>
            <n/>
            Analog zum Dezimalsystem gilt also:<br/>
            1 an 2<sup><small>0</small></sup>-Stelle entspricht 1=2<sup><small>0</small></sup><br/>
            1 an 2<sup><small>1</small></sup>-Stelle entspricht 2=2<sup><small>1</small></sup><br/>
            1 an 2<sup><small>2</small></sup>-Stelle entspricht 4=2<sup><small>2</small></sup><br/>
            ]]>
        </item>
        <item>
            <![CDATA[
            Wenn man nun eine Zahl aus einem anderen Zahlensystem ins Dezimalsystem umrechnen will, muss man nur die Werte
            der einzelnen Stellen anschließend addieren, wie man es auch implizit im Dezimalsystem tut:<br/> (109 = 100 +9).<br/>

            Beispiel im Binärsystem:<br/><br/>
            1010 = 2<sup><small>3</small></sup>*1 + 2<sup><small>2</small></sup>*0 + 2<sup><small>1</small></sup>*1 +2<sup><small>0</small></sup>*0 = 10 im Dezimalsystem <br/>
            oder kürzer, da eine Null an einer Stelle keinen Wert hat:<br/>
            2<sup><small>3</small></sup>*1 + 2<sup><small>1</small></sup>*1 = 10 im Dezimalsystem
            ]]>
        </item>
        <item>
            <![CDATA[
            Bei Zahlensystemen mit anderen Basen funktioniert das analog, es wird aber natürlich mit anderen Basen gerechnet,
            also ist die Stelle ganz rechts nicht die 2<sup><small>0</small></sup>-Stelle, sondern z.B. im 3er-System die 3<sup><small>0</small></sup>-Stelle oder im 6er-System
            die 6<sup><small>0</small></sup>-Stelle.<br/>
            Jeweils die Ziffer an der entsprechenden Stelle wird mit der Potenz, die diesem Stellenwert entspricht, multipliziert
            und dann mit den anderen Stellen addiert.
            ]]>
        </item>
        <item>
            Super, weiter geht es mit der Umrechnung aus dem Dezimalsystem!
        </item>
    </string-array>

    <string-array name="tutorial_other">
        <item><![CDATA[
            Um eine Dezimalzahl in ein anderes  Zahlensystem umzurechnen, hilft es, wenn man ungefähr die Stellenwerte
            in diesem Zahlensystem kennt. Also im Binärsystem 1 = 2<sup><small>0</small></sup>, 2 = 2<sup><small>1</small></sup>, 4 = 2<sup><small>2</small></sup>, 8 = 2<sup><small>3</small></sup>, 16 = 2<sup><small>4</small></sup>…
            Dann kann man schauen, welche dieser Stellenwerte der Größte ist, der in die Dezimalzahl hineinpasst.<br/>
            Beispiel:<br/>
            Dezimal 21: Der größte Stellenwert aus dem Binärsystem, der in 21 passt, ist 2<sup><small>4</small></sup> = 16.<br/>
        ]]></item>
        <item><![CDATA[
            Dann kann man diesen Stellenwert von der Dezimalzahl abziehen und beim Rest analog verfahren.<br/>
            Beispiel:<br/>
            Dezimal 21 - 16 = 5 Der größte Binärstellenwert der in 5 passt, ist 2<sup><small>2</small></sup> =4. <br/>
            5-4=1 Der größte Binärstellenwert der in 1 passt, ist 2<sup><small>0</small></sup> = 1.<br/>
            Damit weiß man, dass an der 2<sup><small>4</small></sup>-Stelle (16er-Stelle), an der 2<sup><small>2</small></sup>-Stelle (4er-Stelle) und an der 2<sup><small>0</small></sup>-Stelle (1er-Stelle) Einser stehen müssen.
            Die restlichen Stellenwerte kommen nicht vor und werden daher mit Nullern aufgefüllt, die ja keinen Wert haben.
         ]]>
        </item>
        <item>
            <![CDATA[
            Bei höheren Basen als 2 wird dieses Vorgehen allerdings schnell schwierig, da ja dann an einer Stelle nicht nur eine 1
            oder 0 stehen kann, sondern auch noch weitere Ziffern, sodass man jeweils noch überlegen müsste, welche Ziffer an einer
            Stelle stehen soll. Deswegen gibt es eine Vorgehensweise, die für alle Zahlensysteme funktioniert.<br/><br/>

            Am Anfang steht die Zahl, die man umrechnen will:<br/>
            Beispiel: 27<br/>
            Diese teilt man durch die Basis des Systems, in das man umrechnen will.<br/>
            27 : 2 = 13 R:1<br/>
            Der Rest entspricht später der Ziffer im Zielsystem.<br/>
            Das Ergebnis teilt man wiederholt durch die Basis des Zielsystems, solange bis das Ergebnis 0 ist.<br/>
            13 : 2 = 6 R: 1<br/>
            6 : 2 = 3 R: 0<br/>
            3 : 2 = 1 R: 1<br/>
            1 : 2 = 0 R: 1<br/>
            Die Zahl im Zielsystem erhält man nun, indem man die Reste von unten nach oben liest. <br/>
            27 ist also im Binärsystem 11011.<br/>
            Man kann im Arbeitsfluss den Rest, den man zuerst erhält, ganz rechts hinschreiben und dann immer eins weiter links
            die nächsten Reste, die man bekommt, eintragen.
            ]]>
        </item>
        <item>
            Man kann genauso natürlich auch in andere Systeme umrechnen, indem man nicht durch 2 teilt,
            sondern z.B. um ins Hexalsystem umzurechnen durch 6. Man wird bemerken, dass automatisch nur Reste bleiben,
            die den Ziffern des jeweiligen Zielsystems entsprechen.
        </item>
        <item>
            Bei Zahlensystemen mit Basen, die größer als 10 sind, muss man allerdings beachten, dass man dann nicht mehr den dezimalen Rest
            hinschreiben kann, sondern die entsprechende Ziffer in diesem Zahlensystem. Statt 10, schreibt man also A, statt 11 B und so weiter.
        </item>
        <item>
            Fast geschafft! Im letzten Tutorial verraten wir ein paar nerdy Umrechnungstricks!
        </item>
    </string-array>
    <string-array name="tutorial_tricks">
        <item><![CDATA[
            Vorher wurde ja schon erwähnt, dass die Umrechnung zwischen Hexadezimalsystem, Oktalsystem und Binärsystem relativ einfach ist.
            Das liegt daran, dass diese Systeme, Zahlensysteme mit Basis 2<sup><small>n</small></sup> sind.2<sup><small>2</small></sup> ist 4, 2<sup><small>3</small></sup> ist 8, 2<sup><small>4</small></sup> ist 16…
            Diese Zahlensysteme kann man ohne zu rechnen ineinander umwandeln.
            ]]>
        </item>
        <item><![CDATA[
        Einer Stelle im 4er-/8er-/16er-System entsprechen 2/3/4 Stellen im 2er-System.
            Die Zahl der jeweiligen 2er-Potenz entspricht der Anzahl der Stellen im Binärsystem, die mit einer Stelle
            im entsprechenden Zahlensystem der Basis 2<sup><small>n</small></sup> dargestellt werden können.
            Man kann also Blöcke von (je nach System) 2, 3 oder 4 Stellen auf einmal umrechnen und diese einfach aneinanderhängen.<br/><br/>
            Beispiel:<br/>
            Quartärzahl:<br/>
            3 0 1 2<br/>
            11000110<br/>
            Binärzahl:  <br/>
            11 entspricht 3, 00 entspricht 0, 01 entspricht 1, 10 entspricht 2<br/>
        ]]>
        </item>
        <item>
            <![CDATA[
            Im Hexadezimalsystem wird das Ganze dadurch etwas komplizierter, dass die gewohnten arabischen Ziffern durch Buchstaben
            ergänzt werden. Mit einer Tabelle kann man sich aber die Entsprechungen der Buchstaben relativ leicht einprägen.<br/>
            [Grafik Tabelle]<br/>
            Aber Vorsicht! Während man direkt vom Binär ins Hexadezimalsystem umschreiben kann, ist dies vom Oktalsystem aus nicht
            möglich. Hier muss ein Umweg über das Binärsystem gegangen werden, da sich die Blöcke an Ziffern, die gleichzeitig
            transkribiert werden, überschneiden.<br/>
            [Graphik Beispiel]<br/>
            ]]>
        </item>
        <item>
            Bei der Umrechnung zwischen anderen Zahlensystemen wird bei größeren Zahlen
            schnell ein Taschenrechner und ein Schmierblatt sehr hilfreich.
        </item>
        <item><![CDATA[
        Das gilt auch für die Umrechnung zwischen nicht dezimalen Zahlensystemen, die nicht Basen 2<sup><small>n</small></sup> haben.
            Hierfür müsste man im Ausgangszahlensystem dividieren , was relativ aufwendig ist.
            Es ist in diesem Fall einfacher, jeweils die entsprechende Zahl ins Dezimalsystem umzurechnen und dann zu teilen.
        ]]>
        </item>
        <item>
            Herzlichen Glückwunsch! Die Tutorials sind alle geschafft, jetzt kann es mit den Übungen so richtig los gehen!
        </item>
    </string-array>

    //Exercise
    <string name="exercise_headline">Wähle ein Zahlensystem</string>
    <string name="multiple_choice_button">Multiple Choice</string>
    <string name="wrong_true_button">Wahr/ Falsch</string>
    <string name="manual_entry_button">Selbsteingabe</string>





</resources>
